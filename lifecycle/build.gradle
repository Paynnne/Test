if (rootProject.ext.isBuildMoudle) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
android {
    rootProject.ext.setDefaultConfig android

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            if (rootProject.ext.isBuildMoudle) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    exclude 'com/vayne/lifecycle/app/**'
                }
            }
        }
    }

    resourcePrefix "lifecycle_"

}


def dependency = rootProject.ext.dependencies

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':commonlib')
    //组件化后arouter每次组件都要加上
    compile dependency['arouter_compile']
}
